version: ~> 1.0
# Run conda tests on the prod pcds python version and later
jobs:
  include:
    - stage: test
      name: "Python 3.9"
      env:
        - PYTHON_VERSION: 3.9
      workspaces:
        use: conda
      install: skip
      before_script:
        # Download micromamba
        - curl -Ls https://micro.mamba.pm/api/micromamba/linux-64/latest | tar -xvj bin/micromamba
        # Set up the shell for micromamba: adds some wrapper bash functions to the env
        - eval "$(./bin/micromamba shell hook --shell=bash)"
        # Create the directory where our environments are stored, equivalent to miniconda's ~/miniconda3
        - mkdir ~/micromamba
        # Activate our empty env and set up channel config
        - micromamba activate
        - micromamba config set always_yes yes
        - micromamba config set changeps1 no
        - micromamba config set channel_priority strict
        - micromamba config remove channels defaults
        - micromamba config prepend channels pcds-tag
        - micromamba config prepend channels conda-forge
        - micromamba config prepend channels "file://`pwd`/bld-dir"
        # Useful for debugging
        - micromamba info
        - micromamba config list
        - echo "Conda Environment Name':' ${CONDA_ENV_NAME:=testenv}"
        - echo "Conda Requirements':' ${CONDA_REQUIREMENTS:=dev-requirements.txt}"

        # Manage conda environment
        - micromamba create -n ${CONDA_ENV_NAME} python=$PYTHON_VERSION ${CONDA_PACKAGE} ${CONDA_EXTRAS} --file ${CONDA_REQUIREMENTS}
        - micromamba activate ${CONDA_ENV_NAME}
        # Useful for debugging
        - micromamba list
      script:
        - |
          set -e
          if command -v coverage; then
              if [ -f "run_tests.py" ]; then
                  coverage run --concurrency=thread --parallel-mode run_tests.py
              else
                  coverage run --concurrency=thread --parallel-mode -m pytest
              fi
              (coverage combine && coverage report | grep -v -e ' 0%') || true
          else
              if [ -f "run_tests.py" ]; then
                  python run_tests.py
              else
                  python -m pytest
              fi
          fi
