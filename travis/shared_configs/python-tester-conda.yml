version: ~> 1.0
# Run conda tests on all versions from NEP 29
jobs:
  include:
    - &testpythonconda
      stage: test
      name: "Python 3.8"
      env:
        - PYTHON_VERSION: "3.8"
        - QT_QPA_PLATFORM: offscreen
      workspaces:
        use: conda
      install: skip
      before_script:
        # Download micromamba
        - curl -Ls https://micro.mamba.pm/api/micromamba/linux-64/latest | tar -xvj bin/micromamba
        # Set up the shell for micromamba: adds some wrapper bash functions to the env
        - eval "$(./bin/micromamba shell hook --shell=bash)"
        # Create the directory where our environments are stored, equivalent to miniconda's ~/miniconda3
        - mkdir ~/micromamba
        # Activate our empty env and set up channel config
        - micromamba activate
        - micromamba config set always_yes yes
        - micromamba config set changeps1 no
        - micromamba config set channel_priority strict
        - micromamba config remove channels defaults
        - micromamba config prepend channels pcds-tag
        - micromamba config prepend channels conda-forge
        - micromamba config prepend channels "file://`pwd`/bld-dir"
        # Useful for debugging
        - micromamba info
        - micromamba config list
        - echo "Conda Environment Name':' ${CONDA_ENV_NAME:=testenv}"
        - echo "Conda Requirements':' ${CONDA_REQUIREMENTS:=dev-requirements.txt}"
        - echo "Conda packages installed for CI':' ${CONDA_CI_PACKAGES:=pytest-cov}"
        # Manage conda environment
        - micromamba create -n ${CONDA_ENV_NAME} python=$PYTHON_VERSION ${CONDA_PACKAGE} ${CONDA_EXTRAS} ${CONDA_CI_PACKAGES} --file ${CONDA_REQUIREMENTS}
        - micromamba activate ${CONDA_ENV_NAME}
        # Useful for debugging
        - micromamba list
      script:
        - |
          PYTEST_ARGS=(-v)
          PYTEST_ARGS+=(--cov=.)
          PYTEST_ARGS+=(--log-file="${AFTER_FAILURE_LOGFILE:-logs/run_tests_log.txt}")
          PYTEST_ARGS+=(--log-format='%(asctime)s.%(msecs)03d %(module)-15s %(levelname)-8s %(threadName)-10s %(message)s')
          PYTEST_ARGS+=(--log-file-date-format='%H:%M:%S')
          PYTEST_ARGS+=(--log-level=DEBUG)
        - pytest "${PYTEST_ARGS[@]}"
      after_failure:
        - LOGFILE="${AFTER_FAILURE_LOGFILE:-logs/run_tests_log.txt}"
        - |
          if [ -f "${LOGFILE}" ]; then
            cat "${LOGFILE}"
          else
            echo "Logfile ${LOGFILE} not found"
          fi
    - <<: *testpythonconda
      name: "Python 3.9"
      env:
        - PYTHON_VERSION: "3.9"
    - <<: *testpythonconda
      name: "Python 3.10"
      env:
        - PYTHON_VERSION: "3.10"
  allow_failures:
    - name: "Python 3.10"
